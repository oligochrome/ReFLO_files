syntax = "proto3";

package ReFLO;

//  Manager_129
message script_eventFLO {
	uint32	script_event_id	= 1;
	uint32	uniqId	= 2;
	uint32	fileResId	= 3;
	uint32	scriptType	= 4;
	uint32	stepStartFlag	= 5;
	uint32	stepEndFlag	= 6;
	uint32	vector[0]	= 7;
	uint32	vector[1]	= 8;
	uint32	vector[2]	= 9;
	int32	vector[0]	= 10;
	int32	vector[1]	= 11;
	int32	vector[2]	= 12;
	uint32	vector[0]	= 13;
	uint32	vector[1]	= 14;
	uint32	vector[2]	= 15;
	sint32	vector[0]	= 16;		//	SByte
	sint32	vector[1]	= 17;		//	SByte
	sint32	vector[2]	= 18;		//	SByte
	uint32	vector[0]	= 19;
	uint32	vector[1]	= 20;
	int32	vector[0]	= 21;
	int32	vector[1]	= 22;
	uint32	vector[0]	= 23;
	uint32	vector[1]	= 24;
}

message tablescript_eventFLO { repeated script_eventFLO tableScriptEvent = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen script_event_Manager_129.proto


			   case "script_event.bytes":
					ii = 0;
					tablescript_event tblManager129 = new tablescript_event { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager129.TableScriptEvent.Add(new script_eventFLO
								{
									ScriptEventId = br.ReadUInt32(),
									UniqId = br.ReadUInt32(),
									FileResId = br.ReadUInt32(),
									ScriptType = br.ReadUInt32(),
									StepStartFlag = br.ReadUInt32(),
									StepEndFlag = br.ReadUInt32(),
									Vector[0] = br.ReadUInt32(),
									Vector[1] = br.ReadUInt32()									Vector[2] = br.ReadSByte(),

								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager129, Formatting.Indented)); }
					return tblManager129;
*/