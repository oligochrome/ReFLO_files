syntax = "proto3";

package ReFLO;

//  Manager_499
message challenge_content_craftFLO {
	uint32	challenge_content_craft_id	= 1;
	uint32	Id	= 2;
	uint32	useLifeId	= 3;
	int32	rewardValue	= 4;
	uint32	itemObjId	= 5;
	int32	miniGameCreateTime	= 6;
	int32	miniGameHp	= 7;
	uint32	first_clear_reward_obj_id_1	= 8;
	int32	first_clear_reward_num_1	= 9;
	uint32	first_clear_reward_obj_id_2	= 10;
	int32	first_clear_reward_num_2	= 11;
	uint32	first_clear_reward_obj_id_3	= 12;
	int32	first_clear_reward_num_3	= 13;
	uint32	vector[0]	= 14;
	uint32	vector[1]	= 15;
	uint32	vector[2]	= 16;
	uint32	vector[0]	= 17;
	uint32	vector[1]	= 18;
	uint32	vector[2]	= 19;
	int32	vector[0]	= 20;
	int32	vector[1]	= 21;
	int32	vector[2]	= 22;
	uint32	reward_sub_comp	= 23;
	int32	reward_sub_comp_num	= 24;
}

message tablechallenge_content_craftFLO { repeated challenge_content_craftFLO tableChallengeContentCraft = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen challenge_content_craft_Manager_499.proto


			   case "challenge_content_craft.bytes":
					ii = 0;
					tablechallenge_content_craft tblManager499 = new tablechallenge_content_craft { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager499.TableChallengeContentCraft.Add(new challenge_content_craftFLO
								{
									ChallengeContentCraftId = br.ReadUInt32(),
									Id = br.ReadUInt32(),
									UseLifeId = br.ReadUInt32(),
									RewardValue = br.ReadInt32(),
									ItemObjId = br.ReadUInt32(),
									MiniGameCreateTime = br.ReadInt32(),
									MiniGameHp = br.ReadInt32(),
									FirstClearRewardObjId1 = br.ReadUInt32(),
									FirstClearRewardNum1 = br.ReadInt32(),
									FirstClearRewardObjId2 = br.ReadUInt32(),
									FirstClearRewardNum2 = br.ReadInt32(),
									FirstClearRewardObjId3 = br.ReadUInt32(),
									FirstClearRewardNum3 = br.ReadInt32(),
									Vector[0] = br.ReadInt32(),
									Vector[1] = br.ReadInt32(),
									Vector[2] = br.ReadInt32(),
									RewardSubComp = br.ReadUInt32(),
									RewardSubCompNum = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager499, Formatting.Indented)); }
					return tblManager499;
*/