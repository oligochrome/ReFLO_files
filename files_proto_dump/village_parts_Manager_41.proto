syntax = "proto3";

package ReFLO;

//  Manager_41
message village_partsFLO {
	uint32	village_parts_id	= 1;
	uint32	partId	= 2;
	uint32	objId	= 3;
	uint32	infoNameID	= 4;
	uint32	positionCalcType	= 5;
	uint32	forceReturnId	= 6;
	int32	accessEnableState	= 7;
	int32	touchEnableState	= 8;
	float	vector[0]	= 9;		//	Single
	float	vector[1]	= 10;		//	Single
	float	vector[2]	= 11;		//	Single
	float	vector[0]	= 12;		//	Single
	float	vector[1]	= 13;		//	Single
	float	vector[2]	= 14;		//	Single
	float	vector[0]	= 15;		//	Single
	float	vector[1]	= 16;		//	Single
	float	vector[2]	= 17;		//	Single
	sint32	touchDisable	= 18;		//	SByte
	string	nodeName	= 19;
	string	colliderObjectName	= 20;
}

message tablevillage_partsFLO { repeated village_partsFLO tableVillageParts = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen village_parts_Manager_41.proto


			   case "village_parts.bytes":
					ii = 0;
					tablevillage_parts tblManager41 = new tablevillage_parts { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager41.TableVillageParts.Add(new village_partsFLO
								{
									VillagePartsId = br.ReadUInt32(),
									PartId = br.ReadUInt32(),
									ObjId = br.ReadUInt32(),
									InfoNameID = br.ReadUInt32(),
									PositionCalcType = br.ReadUInt32(),
									ForceReturnId = br.ReadUInt32(),
									AccessEnableState = br.ReadInt32(),
									TouchEnableState = br.ReadInt32(),
									Vector[0] = br.ReadSingle(),
									Vector[1] = br.ReadSingle(),
									Vector[2] = br.ReadSingle(),
									TouchDisable = br.ReadSByte(),
									NodeName = br.ReadString(),
									ColliderObjectName = br.ReadString()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager41, Formatting.Indented)); }
					return tblManager41;
*/