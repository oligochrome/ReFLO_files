syntax = "proto3";

package ReFLO;

//  Manager_436
message ev_chara_ratioFLO {
	uint32	ev_chara_ratio_id	= 1;
	uint32	uniqid	= 2;
	int32	rarity	= 3;
	int32	evolve	= 4;
	uint32	attrId	= 5;
	int32	greatSuccess	= 6;
	int32	success	= 7;
	int32	failure	= 8;
	int32	greatFailure	= 9;
	uint32	needItemId	= 10;
	int32	needItemCnt	= 11;
	uint32	useSaveItemCondId	= 12;
	uint32	amuletItemId	= 13;
	int32	amuletItemCnt	= 14;
	int32	costRich	= 15;
}

message tableev_chara_ratioFLO { repeated ev_chara_ratioFLO tableEvCharaRatio = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen ev_chara_ratio_Manager_436.proto


			   case "ev_chara_ratio.bytes":
					ii = 0;
					tableev_chara_ratio tblManager436 = new tableev_chara_ratio { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager436.TableEvCharaRatio.Add(new ev_chara_ratioFLO
								{
									EvCharaRatioId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									Rarity = br.ReadInt32(),
									Evolve = br.ReadInt32(),
									AttrId = br.ReadUInt32(),
									GreatSuccess = br.ReadInt32(),
									Success = br.ReadInt32(),
									Failure = br.ReadInt32(),
									GreatFailure = br.ReadInt32(),
									NeedItemId = br.ReadUInt32(),
									NeedItemCnt = br.ReadInt32(),
									UseSaveItemCondId = br.ReadUInt32(),
									AmuletItemId = br.ReadUInt32(),
									AmuletItemCnt = br.ReadInt32(),
									CostRich = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager436, Formatting.Indented)); }
					return tblManager436;
*/