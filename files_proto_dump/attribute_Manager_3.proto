syntax = "proto3";

package ReFLO;

//  Manager_3
message attributeFLO {
	uint32	attribute_id	= 1;
	uint32	uqid	= 2;
	string	spriteName	= 3;
	string	spriteNameSmall	= 4;
	string	defSpriteName	= 5;
	string	protectSpriteNamePop	= 6;
	uint32	TextID	= 7;
	uint32	defTextID	= 8;
	uint32	hitEffectID	= 9;
	int32	sortNum	= 10;		//	Byte
	int32	equipSortNum	= 11;		//	Byte
	uint32	mainAttrID	= 12;
	uint32	subAttrID	= 13;
	uint32	guardAttrID	= 14;
}

message tableattributeFLO { repeated attributeFLO tableAttribute = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen attribute_Manager_3.proto


			   case "attribute.bytes":
					ii = 0;
					tableattribute tblManager3 = new tableattribute { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager3.TableAttribute.Add(new attributeFLO
								{
									AttributeId = br.ReadUInt32(),
									Uqid = br.ReadUInt32(),
									SpriteName = br.ReadString(),
									SpriteNameSmall = br.ReadString(),
									DefSpriteName = br.ReadString(),
									ProtectSpriteNamePop = br.ReadString(),
									TextID = br.ReadUInt32(),
									DefTextID = br.ReadUInt32(),
									HitEffectID = br.ReadUInt32(),
									SortNum = br.ReadByte(),
									EquipSortNum = br.ReadByte(),
									MainAttrID = br.ReadUInt32(),
									SubAttrID = br.ReadUInt32(),
									GuardAttrID = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager3, Formatting.Indented)); }
					return tblManager3;
*/