syntax = "proto3";

package ReFLO;

//  Manager_46
message village_groundFLO {
	uint32	village_ground_id	= 1;
	uint32	groundObjId	= 2;
	uint32	floorObjId	= 3;
	uint32	streetObjId	= 4;
	uint32	collisionResId	= 5;
	uint32	treeSResId	= 6;
	uint32	treeMResId	= 7;
	uint32	treeLResId	= 8;
	uint32	rockSResId	= 9;
	uint32	rockMResId	= 10;
	uint32	rockLResId	= 11;
	uint32	statueAfterResId	= 12;
	uint32	boardBeforeResId	= 13;
	uint32	baloonBeforeResId	= 14;
	uint32	starBeforeResId	= 15;
	uint32	starAfterResId	= 16;
}

message tablevillage_groundFLO { repeated village_groundFLO tableVillageGround = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen village_ground_Manager_46.proto


			   case "village_ground.bytes":
					ii = 0;
					tablevillage_ground tblManager46 = new tablevillage_ground { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager46.TableVillageGround.Add(new village_groundFLO
								{
									VillageGroundId = br.ReadUInt32(),
									GroundObjId = br.ReadUInt32(),
									FloorObjId = br.ReadUInt32(),
									StreetObjId = br.ReadUInt32(),
									CollisionResId = br.ReadUInt32(),
									TreeSResId = br.ReadUInt32(),
									TreeMResId = br.ReadUInt32(),
									TreeLResId = br.ReadUInt32(),
									RockSResId = br.ReadUInt32(),
									RockMResId = br.ReadUInt32(),
									RockLResId = br.ReadUInt32(),
									StatueAfterResId = br.ReadUInt32(),
									BoardBeforeResId = br.ReadUInt32(),
									BaloonBeforeResId = br.ReadUInt32(),
									StarBeforeResId = br.ReadUInt32(),
									StarAfterResId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager46, Formatting.Indented)); }
					return tblManager46;
*/