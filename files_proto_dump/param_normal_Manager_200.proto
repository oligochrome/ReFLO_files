syntax = "proto3";

package ReFLO;

//  Manager_200
message param_normalFLO {
	uint32	param_normal_id	= 1;
	uint32	uniqid	= 2;
	uint32	contentsId	= 3;
	uint32	dropObjectId	= 4;
	uint32	attributeAttchId	= 5;
	uint32	efficacyAttachId	= 6;
	uint32	grantEfficacyType	= 7;
	repeated uint32	efficacyIds	= 8;		// uint32  [0-2]
	repeated float	efficacyValues	= 9;		//	Single [0-2]
	int32	pocketRegister	= 10;		//	Int16
	int32	recastFirstTimeSec	= 11;
	int32	recastTimeSec	= 12;
	int32	useCheck	= 13;		//	Byte
}

message tableparam_normalFLO { repeated param_normalFLO tableParamNormal = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen param_normal_Manager_200.proto


			   case "param_normal.bytes":
					ii = 0;
					tableparam_normal tblManager200 = new tableparam_normal { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager200.TableParamNormal.Add(new param_normalFLO
								{
									ParamNormalId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									ContentsId = br.ReadUInt32(),
									DropObjectId = br.ReadUInt32(),
									AttributeAttchId = br.ReadUInt32(),
									EfficacyAttachId = br.ReadUInt32(),
									GrantEfficacyType = br.ReadUInt32(),
									Uvector = { br.ReadUInt32(),  br.ReadUInt32(), br.ReadUInt32() },
									Svector = { br.ReadSingle(),  br.ReadSingle(), br.ReadSingle() },
									PocketRegister = br.ReadInt16(),
									RecastFirstTimeSec = br.ReadInt32(),
									RecastTimeSec = br.ReadInt32(),
									UseCheck = br.ReadByte()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager200, Formatting.Indented)); }
					return tblManager200;
*/