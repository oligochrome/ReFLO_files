syntax = "proto3";

package ReFLO;

//  Manager_139
message runes_gpFLO {
	uint32	runes_gp_id	= 1;
	uint32	runeGpId	= 2;
	string	runeGpIdText	= 3;
	uint32	gpId	= 4;
	int32	initValue	= 5;
	uint32	lotStrengthValueTypeId	= 6;
	uint32	filterMenuSortNo	= 7;
}

message tablerunes_gpFLO { repeated runes_gpFLO tableRunesGp = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen runes_gp_Manager_139.proto


			   case "runes_gp.bytes":
					ii = 0;
					tablerunes_gp tblManager139 = new tablerunes_gp { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager139.TableRunesGp.Add(new runes_gpFLO
								{
									RunesGpId = br.ReadUInt32(),
									RuneGpId = br.ReadUInt32(),
									RuneGpIdText = br.ReadString(),
									GpId = br.ReadUInt32(),
									InitValue = br.ReadInt32(),
									LotStrengthValueTypeId = br.ReadUInt32(),
									FilterMenuSortNo = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager139, Formatting.Indented)); }
					return tblManager139;
*/