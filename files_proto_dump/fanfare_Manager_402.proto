syntax = "proto3";

package ReFLO;

//  Manager_402
message fanfareFLO {
	uint32	fanfare_id	= 1;
	uint32	fanfareId	= 2;
	uint32	fanfareType	= 3;
	uint32	level	= 4;
	uint32	titleTextId	= 5;
	uint32	vector[0]	= 6;
	uint32	vector[1]	= 7;
	uint32	vector[2]	= 8;
	uint32	vector[3]	= 9;
	int32	vector[0]	= 10;
	int32	vector[1]	= 11;
	int32	vector[2]	= 12;
	int32	vector[3]	= 13;
	uint32	vector[0]	= 14;
	uint32	vector[1]	= 15;
	uint32	charaLeft	= 16;
	uint32	charaRight	= 17;
	uint32	charaLeftAct	= 18;
	uint32	charaRightAct	= 19;
}

message tablefanfareFLO { repeated fanfareFLO tableFanfare = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen fanfare_Manager_402.proto


			   case "fanfare.bytes":
					ii = 0;
					tablefanfare tblManager402 = new tablefanfare { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager402.TableFanfare.Add(new fanfareFLO
								{
									FanfareId = br.ReadUInt32(),
									FanfareId = br.ReadUInt32(),
									FanfareType = br.ReadUInt32(),
									Level = br.ReadUInt32(),
									TitleTextId = br.ReadUInt32(),
									Vector[0] = br.ReadUInt32(),
									Vector[1] = br.ReadUInt32(),
									Vector[2] = br.ReadInt32(),
									Vector[3] = br.ReadInt32(),
									CharaLeft = br.ReadUInt32(),
									CharaRight = br.ReadUInt32(),
									CharaLeftAct = br.ReadUInt32(),
									CharaRightAct = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager402, Formatting.Indented)); }
					return tblManager402;
*/