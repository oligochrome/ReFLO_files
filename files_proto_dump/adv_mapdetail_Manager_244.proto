syntax = "proto3";

package ReFLO;

//  Manager_244
message adv_mapdetailFLO {
	uint32	adv_mapdetail_id	= 1;
	uint32	advdetailId	= 2;
	uint32	textId_name	= 3;
	uint32	textId_description	= 4;
	uint32	objId_mapobj	= 5;
	uint32	resId_radarmap	= 6;
	float	pinningPosX	= 7;		//	Single
	float	pinningPosY	= 8;		//	Single
	float	pinningPosZ	= 9;		//	Single
	float	pinningRot	= 10;		//	Single
	uint32	mapBoundaryObjId	= 11;
	uint32	hereIconResId	= 12;
	float	height	= 13;		//	Single
	float	distance	= 14;		//	Single
	float	offsetY	= 15;		//	Single
	float	offsetZ	= 16;		//	Single
	float	fieldOfView	= 17;		//	Single
	uint32	bitfield0	= 18;
	uint32	mapId	= 19;
}

message tableadv_mapdetailFLO { repeated adv_mapdetailFLO tableAdvMapdetail = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen adv_mapdetail_Manager_244.proto


			   case "adv_mapdetail.bytes":
					ii = 0;
					tableadv_mapdetail tblManager244 = new tableadv_mapdetail { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager244.TableAdvMapdetail.Add(new adv_mapdetailFLO
								{
									AdvMapdetailId = br.ReadUInt32(),
									AdvdetailId = br.ReadUInt32(),
									TextIdName = br.ReadUInt32(),
									TextIdDescription = br.ReadUInt32(),
									ObjIdMapobj = br.ReadUInt32(),
									ResIdRadarmap = br.ReadUInt32(),
									PinningPosX = br.ReadSingle(),
									PinningPosY = br.ReadSingle(),
									PinningPosZ = br.ReadSingle(),
									PinningRot = br.ReadSingle(),
									MapBoundaryObjId = br.ReadUInt32(),
									HereIconResId = br.ReadUInt32(),
									Height = br.ReadSingle(),
									Distance = br.ReadSingle(),
									OffsetY = br.ReadSingle(),
									OffsetZ = br.ReadSingle(),
									FieldOfView = br.ReadSingle(),
									Bitfield0 = br.ReadUInt32(),
									MapId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager244, Formatting.Indented)); }
					return tblManager244;
*/