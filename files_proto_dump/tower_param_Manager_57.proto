syntax = "proto3";

package ReFLO;

//  Manager_57
message tower_paramFLO {
	uint32	tower_param_id	= 1;
	uint32	uniqId	= 2;
	uint32	questId	= 3;
	int32	enemyHP	= 4;
	int32	offence_Knight	= 5;
	int32	offence_Mercenary	= 6;
	int32	offence_Hunter	= 7;
	int32	offence_Wizard	= 8;
	int32	offence_Prospector	= 9;
	int32	offence_Lumber	= 10;
	int32	offence_Fisher	= 11;
	int32	offence_Cook	= 12;
	int32	offence_Blacksmith	= 13;
	int32	offence_Carpenter	= 14;
	int32	offence_NeedleWorker	= 15;
	int32	offence_Alchemist	= 16;
	int32	offence_None	= 17;
}

message tabletower_paramFLO { repeated tower_paramFLO tableTowerParam = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen tower_param_Manager_57.proto


			   case "tower_param.bytes":
					ii = 0;
					tabletower_param tblManager57 = new tabletower_param { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager57.TableTowerParam.Add(new tower_paramFLO
								{
									TowerParamId = br.ReadUInt32(),
									UniqId = br.ReadUInt32(),
									QuestId = br.ReadUInt32(),
									EnemyHP = br.ReadInt32(),
									OffenceKnight = br.ReadInt32(),
									OffenceMercenary = br.ReadInt32(),
									OffenceHunter = br.ReadInt32(),
									OffenceWizard = br.ReadInt32(),
									OffenceProspector = br.ReadInt32(),
									OffenceLumber = br.ReadInt32(),
									OffenceFisher = br.ReadInt32(),
									OffenceCook = br.ReadInt32(),
									OffenceBlacksmith = br.ReadInt32(),
									OffenceCarpenter = br.ReadInt32(),
									OffenceNeedleWorker = br.ReadInt32(),
									OffenceAlchemist = br.ReadInt32(),
									OffenceNone = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager57, Formatting.Indented)); }
					return tblManager57;
*/