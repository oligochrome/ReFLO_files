syntax = "proto3";

package ReFLO;

//  Manager_291
message lifeFLO {
	uint32	life_id	= 1;
	uint32	uniqid	= 2;
	uint32	nameId	= 3;
	uint32	descriptionId	= 4;
	uint32	resIdIcon	= 5;
	string	iconSpriteName	= 6;
	string	charaSpriteName	= 7;
	uint32	defMaleEquipSetId	= 8;
	uint32	defFemaleEquipSetId	= 9;
	uint32	defWeaponType	= 10;
	uint32	lifeCategoryId	= 11;
	int32	sortNumber	= 12;
	uint32	lifeMasterObjId	= 13;
	uint32	lifeDiscipleObjId	= 14;
	int32	optimumWaitHP	= 15;
	int32	optimumWaitSP	= 16;
	int32	optimumWaitPO	= 17;
	int32	optimumWaitMO	= 18;
	int32	optimumWaitPD	= 19;
	int32	optimumWaitMD	= 20;
	uint32	defWeaponCaetgory	= 21;
	float	avatarPhysicalCoef	= 22;		//	Single
	float	avatarMagicCoef	= 23;		//	Single
	float	normalAttackRatioUp	= 24;		//	Single
	float	chargeRatioUp	= 25;		//	Single
	float	chargeXRatioUp	= 26;		//	Single
	float	tensionRatioUp	= 27;		//	Single
	float	normalAttackCoef	= 28;		//	Single
	float	chargeCoef	= 29;		//	Single
	float	chargeXCoef	= 30;		//	Single
	float	tensionCoef	= 31;		//	Single
}

message tablelifeFLO { repeated lifeFLO tableLife = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen life_Manager_291.proto


			   case "life.bytes":
					ii = 0;
					tablelife tblManager291 = new tablelife { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager291.TableLife.Add(new lifeFLO
								{
									LifeId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									NameId = br.ReadUInt32(),
									DescriptionId = br.ReadUInt32(),
									ResIdIcon = br.ReadUInt32(),
									IconSpriteName = br.ReadString(),
									CharaSpriteName = br.ReadString(),
									DefMaleEquipSetId = br.ReadUInt32(),
									DefFemaleEquipSetId = br.ReadUInt32(),
									DefWeaponType = br.ReadUInt32(),
									LifeCategoryId = br.ReadUInt32(),
									SortNumber = br.ReadInt32(),
									LifeMasterObjId = br.ReadUInt32(),
									LifeDiscipleObjId = br.ReadUInt32(),
									OptimumWaitHP = br.ReadInt32(),
									OptimumWaitSP = br.ReadInt32(),
									OptimumWaitPO = br.ReadInt32(),
									OptimumWaitMO = br.ReadInt32(),
									OptimumWaitPD = br.ReadInt32(),
									OptimumWaitMD = br.ReadInt32(),
									DefWeaponCaetgory = br.ReadUInt32(),
									AvatarPhysicalCoef = br.ReadSingle(),
									AvatarMagicCoef = br.ReadSingle(),
									NormalAttackRatioUp = br.ReadSingle(),
									ChargeRatioUp = br.ReadSingle(),
									ChargeXRatioUp = br.ReadSingle(),
									TensionRatioUp = br.ReadSingle(),
									NormalAttackCoef = br.ReadSingle(),
									ChargeCoef = br.ReadSingle(),
									ChargeXCoef = br.ReadSingle(),
									TensionCoef = br.ReadSingle()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager291, Formatting.Indented)); }
					return tblManager291;
*/