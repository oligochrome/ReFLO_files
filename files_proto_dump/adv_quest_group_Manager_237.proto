syntax = "proto3";

package ReFLO;

//  Manager_237
message adv_quest_groupFLO {
	uint32	adv_quest_group_id	= 1;
	uint32	advGroupId	= 2;
	uint32	textId_name	= 3;
	int32	sort_idx	= 4;
	uint32	resId_banner	= 5;
	uint32	resId_CharactorBanner	= 6;
	uint32	resId_HeaderBanner	= 7;
	uint32	resId_MainFrameDailyUIBanner	= 8;
	int32	questEnable	= 9;
	uint32	eventId	= 10;
	uint32	is_open_mon	= 11;
	uint32	is_open_tue	= 12;
	uint32	is_open_wed	= 13;
	uint32	is_open_thu	= 14;
	uint32	is_open_fri	= 15;
	uint32	is_open_sat	= 16;
	uint32	is_open_sun	= 17;
	uint32	dispTextId	= 18;
	uint32	release_condition_flag	= 19;
	uint32	categoryID	= 20;
	uint32	playID	= 21;
	uint32	groupBoostId	= 22;
	uint32	bgmIdOnQuestSelect	= 23;
}

message tableadv_quest_groupFLO { repeated adv_quest_groupFLO tableAdvQuestGroup = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen adv_quest_group_Manager_237.proto


			   case "adv_quest_group.bytes":
					ii = 0;
					tableadv_quest_group tblManager237 = new tableadv_quest_group { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager237.TableAdvQuestGroup.Add(new adv_quest_groupFLO
								{
									AdvQuestGroupId = br.ReadUInt32(),
									AdvGroupId = br.ReadUInt32(),
									TextIdName = br.ReadUInt32(),
									SortIdx = br.ReadInt32(),
									ResIdBanner = br.ReadUInt32(),
									ResIdCharactorBanner = br.ReadUInt32(),
									ResIdHeaderBanner = br.ReadUInt32(),
									ResIdMainFrameDailyUIBanner = br.ReadUInt32(),
									QuestEnable = br.ReadInt32(),
									EventId = br.ReadUInt32(),
									IsOpenMon = br.ReadUInt32(),
									IsOpenTue = br.ReadUInt32(),
									IsOpenWed = br.ReadUInt32(),
									IsOpenThu = br.ReadUInt32(),
									IsOpenFri = br.ReadUInt32(),
									IsOpenSat = br.ReadUInt32(),
									IsOpenSun = br.ReadUInt32(),
									DispTextId = br.ReadUInt32(),
									ReleaseConditionFlag = br.ReadUInt32(),
									CategoryID = br.ReadUInt32(),
									PlayID = br.ReadUInt32(),
									GroupBoostId = br.ReadUInt32(),
									BgmIdOnQuestSelect = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager237, Formatting.Indented)); }
					return tblManager237;
*/