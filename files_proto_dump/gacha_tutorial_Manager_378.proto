syntax = "proto3";

package ReFLO;

//  Manager_378
message gacha_tutorialFLO {
	uint32	gacha_tutorial_id	= 1;
	uint32	uniqueid	= 2;
	uint32	gachaboxid	= 3;
	uint32	getitemid	= 4;
	uint32	rare	= 5;
	uint32	emissionrate	= 6;
	uint32	sortid	= 7;
	string	comment	= 8;
}

message tablegacha_tutorialFLO { repeated gacha_tutorialFLO tableGachaTutorial = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen gacha_tutorial_Manager_378.proto


			   case "gacha_tutorial.bytes":
					ii = 0;
					tablegacha_tutorial tblManager378 = new tablegacha_tutorial { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager378.TableGachaTutorial.Add(new gacha_tutorialFLO
								{
									GachaTutorialId = br.ReadUInt32(),
									Uniqueid = br.ReadUInt32(),
									Gachaboxid = br.ReadUInt32(),
									Getitemid = br.ReadUInt32(),
									Rare = br.ReadUInt32(),
									Emissionrate = br.ReadUInt32(),
									Sortid = br.ReadUInt32(),
									Comment = br.ReadString()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager378, Formatting.Indented)); }
					return tblManager378;
*/