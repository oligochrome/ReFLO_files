syntax = "proto3";

package ReFLO;

//  Manager_23
message voice_listFLO {
	uint32	voice_list_id	= 1;
	uint32	textId	= 2;
	uint32	voiceColumnNum	= 3;
	int32	flag	= 4;
	int32	sort	= 5;
	int32	isActive	= 6;
}

message tablevoice_listFLO { repeated voice_listFLO tableVoiceList = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen voice_list_Manager_23.proto


			   case "voice_list.bytes":
					ii = 0;
					tablevoice_list tblManager23 = new tablevoice_list { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager23.TableVoiceList.Add(new voice_listFLO
								{
									VoiceListId = br.ReadUInt32(),
									TextId = br.ReadUInt32(),
									VoiceColumnNum = br.ReadUInt32(),
									Flag = br.ReadInt32(),
									Sort = br.ReadInt32(),
									IsActive = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager23, Formatting.Indented)); }
					return tblManager23;
*/