syntax = "proto3";

package ReFLO;

//  Manager_438
message equipsetFLO {
	uint32	equipset_id	= 1;
	uint32	uniqId	= 2;
	uint32	seriesTextId	= 3;
	uint32	setTextId	= 4;
	uint32	vector[0]	= 5;
	uint32	vector[1]	= 6;
	uint32	vector[2]	= 7;
	uint32	vector[3]	= 8;
	uint32	vector[4]	= 9;
	uint32	vector[5]	= 10;
	uint32	vector[6]	= 11;
	uint32	vector[0]	= 12;
	uint32	vector[1]	= 13;
	uint32	vector[2]	= 14;
	int32	vector[0]	= 15;
	int32	vector[1]	= 16;
	int32	vector[2]	= 17;
}

message tableequipsetFLO { repeated equipsetFLO tableEquipset = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen equipset_Manager_438.proto


			   case "equipset.bytes":
					ii = 0;
					tableequipset tblManager438 = new tableequipset { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager438.TableEquipset.Add(new equipsetFLO
								{
									EquipsetId = br.ReadUInt32(),
									UniqId = br.ReadUInt32(),
									SeriesTextId = br.ReadUInt32(),
									SetTextId = br.ReadUInt32(),
									Vector[0] = br.ReadInt32(),
									Vector[1] = br.ReadInt32(),
									Vector[2] = br.ReadInt32()									Vector[3] = br.ReadUInt32(),
									Vector[4] = br.ReadUInt32(),
									Vector[5] = br.ReadUInt32(),
									Vector[6] = br.ReadUInt32(),

								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager438, Formatting.Indented)); }
					return tblManager438;
*/