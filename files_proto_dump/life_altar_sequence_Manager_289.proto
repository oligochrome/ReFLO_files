syntax = "proto3";

package ReFLO;

//  Manager_289
message life_altar_sequenceFLO {
	uint32	life_altar_sequence_id	= 1;
	uint32	uniqId	= 2;
	uint32	lifeAltarSequenceId	= 3;
	uint32	lifePlateResId	= 4;
	uint32	lifePlateTextId	= 5;
	uint32	lifeAltarCategoryId	= 6;
	uint32	lifeAltarCategoryResId	= 7;
	uint32	openLife	= 8;
	uint32	openLicense	= 9;
	uint32	unlockMessageTextId	= 10;
	uint32	unlockObjId	= 11;
	uint32	completeObjId	= 12;
	uint32	clientCharaId	= 13;
	float	clientOffsetX	= 14;		//	Single
	float	clientOffsetY	= 15;		//	Single
	float	clientOffsetSize	= 16;		//	Single
	uint32	clientMessageId	= 17;
	uint32	clientActionId	= 18;
	uint32	clientFaceId	= 19;
	int32	sort	= 20;
}

message tablelife_altar_sequenceFLO { repeated life_altar_sequenceFLO tableLifeAltarSequence = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen life_altar_sequence_Manager_289.proto


			   case "life_altar_sequence.bytes":
					ii = 0;
					tablelife_altar_sequence tblManager289 = new tablelife_altar_sequence { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager289.TableLifeAltarSequence.Add(new life_altar_sequenceFLO
								{
									LifeAltarSequenceId = br.ReadUInt32(),
									UniqId = br.ReadUInt32(),
									LifeAltarSequenceId = br.ReadUInt32(),
									LifePlateResId = br.ReadUInt32(),
									LifePlateTextId = br.ReadUInt32(),
									LifeAltarCategoryId = br.ReadUInt32(),
									LifeAltarCategoryResId = br.ReadUInt32(),
									OpenLife = br.ReadUInt32(),
									OpenLicense = br.ReadUInt32(),
									UnlockMessageTextId = br.ReadUInt32(),
									UnlockObjId = br.ReadUInt32(),
									CompleteObjId = br.ReadUInt32(),
									ClientCharaId = br.ReadUInt32(),
									ClientOffsetX = br.ReadSingle(),
									ClientOffsetY = br.ReadSingle(),
									ClientOffsetSize = br.ReadSingle(),
									ClientMessageId = br.ReadUInt32(),
									ClientActionId = br.ReadUInt32(),
									ClientFaceId = br.ReadUInt32(),
									Sort = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager289, Formatting.Indented)); }
					return tblManager289;
*/