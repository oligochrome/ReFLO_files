syntax = "proto3";

package ReFLO;

//  Manager_204
message param_guardFLO {
	uint32	param_guard_id	= 1;
	uint32	uniqid	= 2;
	uint32	contentsId	= 3;
	uint32	dropObjectId	= 4;
	int32	dyeingEnable	= 5;		//	Byte
	uint32	defaultColorId	= 6;
	repeated int32	blackRGBA	= 7;		//	Byte [0-3]
	repeated int32	whiteRGBA	= 8;		//	Byte [0-3]
	repeated int32	redRGBA		= 9;		//	Byte [0-3]
	repeated int32	greenRGBA	= 10;		//	Byte [0-3]
	repeated int32	blueRGBA	= 11;		//	Byte [0-3]
	repeated int32	yellowRGBA	= 12;		//	Byte [0-3]
	repeated int32	purpleRGBA	= 13;		//	Byte [0-3]
	uint32	bitfield0			= 14;
	uint32	showAttrId			= 15;
	repeated int32	elements	= 16;		//	int32 [0-8]
	repeated uint32 efficacyIds = 17;		//	uint32 [0-2]
	uint32	lvuptype			= 18;
	uint32	skillShieldId1		= 19;
	int32	stardustFlag		= 20;		//	Byte
	uint32	equipLicense		= 21;
	uint32	bitfield1			= 22;
	uint32	uniqueAuraResId		= 23;
	int32	canNotShowAura		= 24;		//	Byte
	repeated uint32 lot_efficacyIds = 25;	//	uint32 [0-2]
}

message tableparam_guardFLO { repeated param_guardFLO tableParamGuard = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen param_guard_Manager_204.proto


			   case "param_guard.bytes":
					throw new Exception("Need to figure out what is causing the incorrect shift for the arrays.");
					ii = 0;
					tableparam_guard tblManager204 = new tableparam_guard { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager204.TableParamGuard.Add(new param_guardFLO
								{
									ParamGuardId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									ContentsId = br.ReadUInt32(),
									DropObjectId = br.ReadUInt32(),
									DyeingEnable = br.ReadByte(),
									DefaultColorId = br.ReadUInt32(),
									BlackRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									WhiteRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									RedRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									GreenRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									BlueRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									YellowRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									PurpleRGBA = { br.ReadByte(), br.ReadByte(), br.ReadByte(), br.ReadByte() },
									Bitfield0 = br.ReadUInt32(),
									ShowAttrId = br.ReadUInt32(),
                                    //				0				1				2				3				 4				5				6				7					8
                                    Elements = { br.ReadInt32(), br.ReadInt32(), br.ReadInt32(), br.ReadInt32(), br.ReadInt32(), br.ReadInt32(), br.ReadInt32(), br.ReadInt32(), br.ReadInt32() },
                                    EfficacyIds = { br.ReadUInt32(), br.ReadUInt32(), br.ReadUInt32() },
									Lvuptype = br.ReadUInt32(),
									SkillShieldId1 = br.ReadUInt32(),
									StardustFlag = br.ReadByte(),
									EquipLicense = br.ReadUInt32(),
									Bitfield1 = br.ReadUInt32(),
									UniqueAuraResId = br.ReadUInt32(),
									CanNotShowAura = br.ReadByte(),
                                    LotEfficacyIds = { br.ReadUInt32(), br.ReadUInt32(), br.ReadUInt32() }
								});
								ii += 1;
                                //Console.Error.WriteLine("DEBUG  ENTRY #{0}", ii);
                                //if (ii >= 1473) { Console.Error.WriteLine("DEBUG  FORCE BREAK!!"); break; }

							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager204, Formatting.Indented)); }
					return tblManager204;
*/