syntax = "proto3";

package ReFLO;

//  Manager_286
message life_changeFLO {
	uint32	life_change_id	= 1;
	uint32	uniqid	= 2;
	uint32	vector[0]	= 3;
	uint32	vector[1]	= 4;
	uint32	vector[2]	= 5;
	uint32	vector[3]	= 6;
	uint32	vector[0]	= 7;
	uint32	vector[1]	= 8;
	uint32	vector[2]	= 9;
	uint32	vector[3]	= 10;
	float	vector[0]	= 11;		//	Single
	float	vector[1]	= 12;		//	Single
	float	vector[2]	= 13;		//	Single
	float	scaleMaster	= 14;		//	Single
	float	rotationMaster	= 15;		//	Single
	uint32	objIdBuilding	= 16;
	float	vector[0]	= 17;		//	Single
	float	vector[1]	= 18;		//	Single
	float	vector[2]	= 19;		//	Single
	float	scaleBuilding	= 20;		//	Single
	float	rotationBuilding	= 21;		//	Single
	uint32	objIdObj1	= 22;
	float	vector[0]	= 23;		//	Single
	float	vector[1]	= 24;		//	Single
	float	vector[2]	= 25;		//	Single
	float	scaleObj1	= 26;		//	Single
	float	rotationObj1	= 27;		//	Single
	uint32	objIdObj2	= 28;
	float	vector[0]	= 29;		//	Single
	float	vector[1]	= 30;		//	Single
	float	vector[2]	= 31;		//	Single
	float	scaleObj2	= 32;		//	Single
	float	rotationObj2	= 33;		//	Single
}

message tablelife_changeFLO { repeated life_changeFLO tableLifeChange = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen life_change_Manager_286.proto


			   case "life_change.bytes":
					ii = 0;
					tablelife_change tblManager286 = new tablelife_change { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager286.TableLifeChange.Add(new life_changeFLO
								{
									LifeChangeId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									Vector[0] = br.ReadSingle(),
									Vector[1] = br.ReadSingle(),
									Vector[2] = br.ReadSingle(),
									Vector[3] = br.ReadUInt32(),
									ScaleMaster = br.ReadSingle(),
									RotationMaster = br.ReadSingle(),
									ObjIdBuilding = br.ReadUInt32(),
									ScaleBuilding = br.ReadSingle(),
									RotationBuilding = br.ReadSingle(),
									ObjIdObj1 = br.ReadUInt32(),
									ScaleObj1 = br.ReadSingle(),
									RotationObj1 = br.ReadSingle(),
									ObjIdObj2 = br.ReadUInt32(),
									ScaleObj2 = br.ReadSingle(),
									RotationObj2 = br.ReadSingle()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager286, Formatting.Indented)); }
					return tblManager286;
*/