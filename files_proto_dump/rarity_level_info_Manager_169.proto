syntax = "proto3";

package ReFLO;

//  Manager_169
message rarity_level_infoFLO {
	uint32	rarity_level_info_id	= 1;
	uint32	uniqueId	= 2;
	uint32	typeId	= 3;
	int32	rarity	= 4;
	int32	level	= 5;
	int32	rarityColorNumber	= 6;
	int32	effectNumber	= 7;
}

message tablerarity_level_infoFLO { repeated rarity_level_infoFLO tableRarityLevelInfo = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen rarity_level_info_Manager_169.proto


			   case "rarity_level_info.bytes":
					ii = 0;
					tablerarity_level_info tblManager169 = new tablerarity_level_info { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager169.TableRarityLevelInfo.Add(new rarity_level_infoFLO
								{
									RarityLevelInfoId = br.ReadUInt32(),
									UniqueId = br.ReadUInt32(),
									TypeId = br.ReadUInt32(),
									Rarity = br.ReadInt32(),
									Level = br.ReadInt32(),
									RarityColorNumber = br.ReadInt32(),
									EffectNumber = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager169, Formatting.Indented)); }
					return tblManager169;
*/