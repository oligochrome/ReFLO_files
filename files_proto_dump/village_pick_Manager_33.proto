syntax = "proto3";

package ReFLO;

//  Manager_33
message village_pickFLO {
	uint32	village_pick_id	= 1;
	uint32	uniqid	= 2;
	int32	needPickingTime	= 3;
	uint32	useLifeId	= 4;
	int32	rewardValue	= 5;
	uint32	useLifeObjId	= 6;
	int32	useLifeObjValue	= 7;
	int32	maxLifeObjValue	= 8;
	int32	bonusPercent	= 9;
	uint32	dropTableId	= 10;
}

message tablevillage_pickFLO { repeated village_pickFLO tableVillagePick = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen village_pick_Manager_33.proto


			   case "village_pick.bytes":
					ii = 0;
					tablevillage_pick tblManager33 = new tablevillage_pick { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager33.TableVillagePick.Add(new village_pickFLO
								{
									VillagePickId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									NeedPickingTime = br.ReadInt32(),
									UseLifeId = br.ReadUInt32(),
									RewardValue = br.ReadInt32(),
									UseLifeObjId = br.ReadUInt32(),
									UseLifeObjValue = br.ReadInt32(),
									MaxLifeObjValue = br.ReadInt32(),
									BonusPercent = br.ReadInt32(),
									DropTableId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager33, Formatting.Indented)); }
					return tblManager33;
*/