syntax = "proto3";

package ReFLO;

//  Manager_413
message exchange_board_charaFLO {
	uint32	exchange_board_chara_id	= 1;
	uint32	charaObjId	= 2;
	uint32	confirmTextId	= 3;
	uint32	confirmActionId	= 4;
	uint32	exchangeTextId	= 5;
	uint32	exchangeActionId	= 6;
	float	charaOffsetX	= 7;		//	Single
	float	charaOffsetY	= 8;		//	Single
	float	charaRotateY	= 9;		//	Single
	float	charaScale	= 10;		//	Single
	float	commentOffsetX	= 11;		//	Single
	float	commentOffsetY	= 12;		//	Single
}

message tableexchange_board_charaFLO { repeated exchange_board_charaFLO tableExchangeBoardChara = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen exchange_board_chara_Manager_413.proto


			   case "exchange_board_chara.bytes":
					ii = 0;
					tableexchange_board_chara tblManager413 = new tableexchange_board_chara { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager413.TableExchangeBoardChara.Add(new exchange_board_charaFLO
								{
									ExchangeBoardCharaId = br.ReadUInt32(),
									CharaObjId = br.ReadUInt32(),
									ConfirmTextId = br.ReadUInt32(),
									ConfirmActionId = br.ReadUInt32(),
									ExchangeTextId = br.ReadUInt32(),
									ExchangeActionId = br.ReadUInt32(),
									CharaOffsetX = br.ReadSingle(),
									CharaOffsetY = br.ReadSingle(),
									CharaRotateY = br.ReadSingle(),
									CharaScale = br.ReadSingle(),
									CommentOffsetX = br.ReadSingle(),
									CommentOffsetY = br.ReadSingle()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager413, Formatting.Indented)); }
					return tblManager413;
*/