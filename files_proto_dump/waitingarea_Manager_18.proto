syntax = "proto3";

package ReFLO;

//  Manager_18
message waitingareaFLO {
	uint32	waitingarea_id	= 1;
	uint32	areaId	= 2;
	uint32	advQuestId	= 3;
	uint32	starQuestId	= 4;
	uint32	mainQuestId	= 5;
	uint32	mapId	= 6;
	uint32	waitingcallId	= 7;
}

message tablewaitingareaFLO { repeated waitingareaFLO tableWaitingarea = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen waitingarea_Manager_18.proto


			   case "waitingarea.bytes":
					ii = 0;
					tablewaitingarea tblManager18 = new tablewaitingarea { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager18.TableWaitingarea.Add(new waitingareaFLO
								{
									WaitingareaId = br.ReadUInt32(),
									AreaId = br.ReadUInt32(),
									AdvQuestId = br.ReadUInt32(),
									StarQuestId = br.ReadUInt32(),
									MainQuestId = br.ReadUInt32(),
									MapId = br.ReadUInt32(),
									WaitingcallId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager18, Formatting.Indented)); }
					return tblManager18;
*/