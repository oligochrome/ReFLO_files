syntax = "proto3";

package ReFLO;

//  Manager_348
message god_boardFLO {
	uint32	god_board_id	= 1;
	uint32	uniqid	= 2;
	uint32	missionNameId	= 3;
	uint32	missionName	= 4;
	uint32	missionType	= 5;
	uint32	missionCategoryType	= 6;
	uint32	loopType	= 7;
	uint32	rewardObjId1	= 8;
	int32	rewardObjCnt1	= 9;
	uint32	rewardObjId2	= 10;
	int32	rewardObjCnt2	= 11;
	int32	rewardRichCnt	= 12;
	uint32	eventId	= 13;
	uint32	iconChara	= 14;
	float	charaOffsetX	= 15;		//	Single
	float	charaOffsetY	= 16;		//	Single
	float	charaScale	= 17;		//	Single
	uint32	description	= 18;
	uint32	descriptionEnd	= 19;
	uint32	actionId	= 20;
	uint32	actionIdEnd	= 21;
	uint32	faceId	= 22;
	uint32	specialBgId	= 23;
	uint32	releaseCharaId	= 24;
	int32	sortNo	= 25;
	uint64	startDate	= 26;		//	UInt64
	uint64	endDate	= 27;		//	UInt64
	sint32	indefiniteFlag	= 28;		//	SByte
}

message tablegod_boardFLO { repeated god_boardFLO tableGodBoard = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen god_board_Manager_348.proto


			   case "god_board.bytes":
					ii = 0;
					tablegod_board tblManager348 = new tablegod_board { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager348.TableGodBoard.Add(new god_boardFLO
								{
									GodBoardId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									MissionNameId = br.ReadUInt32(),
									MissionName = br.ReadUInt32(),
									MissionType = br.ReadUInt32(),
									MissionCategoryType = br.ReadUInt32(),
									LoopType = br.ReadUInt32(),
									RewardObjId1 = br.ReadUInt32(),
									RewardObjCnt1 = br.ReadInt32(),
									RewardObjId2 = br.ReadUInt32(),
									RewardObjCnt2 = br.ReadInt32(),
									RewardRichCnt = br.ReadInt32(),
									EventId = br.ReadUInt32(),
									IconChara = br.ReadUInt32(),
									CharaOffsetX = br.ReadSingle(),
									CharaOffsetY = br.ReadSingle(),
									CharaScale = br.ReadSingle(),
									Description = br.ReadUInt32(),
									DescriptionEnd = br.ReadUInt32(),
									ActionId = br.ReadUInt32(),
									ActionIdEnd = br.ReadUInt32(),
									FaceId = br.ReadUInt32(),
									SpecialBgId = br.ReadUInt32(),
									ReleaseCharaId = br.ReadUInt32(),
									SortNo = br.ReadInt32(),
									StartDate = br.ReadUInt64(),
									EndDate = br.ReadUInt64(),
									IndefiniteFlag = br.ReadSByte()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager348, Formatting.Indented)); }
					return tblManager348;
*/