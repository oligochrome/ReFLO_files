syntax = "proto3";

package ReFLO;

//  Manager_548
message adv_phase_mapFLO {
	uint32	adv_phase_map_id	= 1;
	uint32	uniqId	= 2;
	uint32	phaseMapId	= 3;
	string	objectName	= 4;
	sint32	isCollider	= 5;		//	SByte
	sint32	isActive	= 6;		//	SByte
	int32	qualityLimit	= 7;
}

message tableadv_phase_mapFLO { repeated adv_phase_mapFLO tableAdvPhaseMap = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen adv_phase_map_Manager_548.proto


			   case "adv_phase_map.bytes":
					ii = 0;
					tableadv_phase_map tblManager548 = new tableadv_phase_map { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager548.TableAdvPhaseMap.Add(new adv_phase_mapFLO
								{
									AdvPhaseMapId = br.ReadUInt32(),
									UniqId = br.ReadUInt32(),
									PhaseMapId = br.ReadUInt32(),
									ObjectName = br.ReadString(),
									IsCollider = br.ReadSByte(),
									IsActive = br.ReadSByte(),
									QualityLimit = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager548, Formatting.Indented)); }
					return tblManager548;
*/