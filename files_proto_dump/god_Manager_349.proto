syntax = "proto3";

package ReFLO;

//  Manager_349
message godFLO {
	uint32	god_id	= 1;
	uint32	uniqid	= 2;
	uint32	type	= 3;
	uint32	releaseFlagId	= 4;
	uint32	clearFlagId	= 5;
	uint32	title	= 6;
	uint32	summary	= 7;
	uint32	hint	= 8;
	uint32	speech	= 9;
	float	modelScale	= 10;		//	Single
	float	modeloffsetY	= 11;		//	Single
	uint32	targetIcon	= 12;
	uint32	speechObjId	= 13;
}

message tablegodFLO { repeated godFLO tableGod = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen god_Manager_349.proto


			   case "god.bytes":
					ii = 0;
					tablegod tblManager349 = new tablegod { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager349.TableGod.Add(new godFLO
								{
									GodId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									Type = br.ReadUInt32(),
									ReleaseFlagId = br.ReadUInt32(),
									ClearFlagId = br.ReadUInt32(),
									Title = br.ReadUInt32(),
									Summary = br.ReadUInt32(),
									Hint = br.ReadUInt32(),
									Speech = br.ReadUInt32(),
									ModelScale = br.ReadSingle(),
									ModeloffsetY = br.ReadSingle(),
									TargetIcon = br.ReadUInt32(),
									SpeechObjId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager349, Formatting.Indented)); }
					return tblManager349;
*/