syntax = "proto3";

package ReFLO;

//  Manager_215
message param_charaFLO {
	uint32	param_chara_id	= 1;
	uint32	uniqid	= 2;
	uint32	contentsId	= 3;
	uint32	charaLifeId	= 4;
	uint32	charaSexId	= 5;
	uint32	ageSpeciesId	= 6;
	uint32	charaIllustId	= 7;
	uint32	nickNameTextId	= 8;
	uint32	voiceTypeId	= 9;
	uint32	defaultEquipID	= 10;
	uint32	defaultToolID	= 11;
	uint32	defaultSkillID	= 12;
	uint32	defaultSkillID1	= 13;
	uint32	defaultSkillID2	= 14;
	uint32	equip_type	= 15;
	uint32	paramCharaTextID	= 16;
	uint32	paramCharaVoiceID	= 17;
	uint32	cvTextID	= 18;
	uint32	voicePackID	= 19;
	uint32	personalityID	= 20;
	uint32	attrId	= 21;
	uint32	enemyRankID	= 22;
	uint32	bgmID	= 23;
	uint32	popEffectTypeId	= 24;
	uint32	repopType	= 25;
	uint32	lifeDamageCoefID	= 26;
	uint32	awakeningTypeID	= 27;
	float	effectPosX	= 28;		//	Single
	float	effectPosY	= 29;		//	Single
	float	popupOffsetY	= 30;		//	Single
	float	theaterScale	= 31;		//	Single
	repeated float	theaterOffset	= 32;		//	Single [0-2]
	float	theaterBalloonOffsetY	= 33;		//	Single
	float	generalUiScale	= 34;		//	Single
	int32	bitfield0	= 35;		//	Byte
	uint32	lvupType	= 36;
	uint32	skillPonitType	= 37;
	uint32	episodeTextId	= 38;
	string	extraUrl	= 39;
	uint32	sp_gropu_id	= 40;
}

message tableparam_charaFLO { repeated param_charaFLO tableParamChara = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen param_chara_Manager_215.proto


			   case "param_chara.bytes":
					ii = 0;
					tableparam_chara tblManager215 = new tableparam_chara { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager215.TableParamChara.Add(new param_charaFLO
								{
									ParamCharaId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									ContentsId = br.ReadUInt32(),
									CharaLifeId = br.ReadUInt32(),
									CharaSexId = br.ReadUInt32(),
									AgeSpeciesId = br.ReadUInt32(),
									CharaIllustId = br.ReadUInt32(),
									NickNameTextId = br.ReadUInt32(),
									VoiceTypeId = br.ReadUInt32(),
									DefaultEquipID = br.ReadUInt32(),
									DefaultToolID = br.ReadUInt32(),
									DefaultSkillID = br.ReadUInt32(),
									DefaultSkillID1 = br.ReadUInt32(),
									DefaultSkillID2 = br.ReadUInt32(),
									EquipType = br.ReadUInt32(),
									ParamCharaTextID = br.ReadUInt32(),
									ParamCharaVoiceID = br.ReadUInt32(),
									CvTextID = br.ReadUInt32(),
									VoicePackID = br.ReadUInt32(),
									PersonalityID = br.ReadUInt32(),
									AttrId = br.ReadUInt32(),
									EnemyRankID = br.ReadUInt32(),
									BgmID = br.ReadUInt32(),
									PopEffectTypeId = br.ReadUInt32(),
									RepopType = br.ReadUInt32(),
									LifeDamageCoefID = br.ReadUInt32(),
									AwakeningTypeID = br.ReadUInt32(),
									EffectPosX = br.ReadSingle(),
									EffectPosY = br.ReadSingle(),
									PopupOffsetY = br.ReadSingle(),
									TheaterScale = br.ReadSingle(),
									theaterOffset = { br.ReadSingle(), br.ReadSingle(), br.ReadSingle() },
									TheaterBalloonOffsetY = br.ReadSingle(),
									GeneralUiScale = br.ReadSingle(),
									Bitfield0 = br.ReadByte(),
									LvupType = br.ReadUInt32(),
									SkillPonitType = br.ReadUInt32(),
									EpisodeTextId = br.ReadUInt32(),
									ExtraUrl = br.ReadString(),
									SpGropuId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager215, Formatting.Indented)); }
					return tblManager215;
*/