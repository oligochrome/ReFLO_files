syntax = "proto3";

package ReFLO;

//  Manager_472
message dbg_quick_startFLO {
	uint32	dbg_quick_start_id	= 1;
	uint32	unqId	= 2;
	string	name	= 3;
	string	folder	= 4;
	uint32	lifeId	= 5;
	uint32	bitfield0	= 6;		//	UInt16
	uint32	guildhouse	= 7;		//	UInt16
	int32	rich	= 8;		//	Int16
	int32	number	= 9;		//	Int16
	string	addRangeStr	= 10;
	string	addIdStr	= 11;
	int32	isTrial	= 12;		//	Byte
	string	bootSceneName	= 13;
	int32	vector[0]	= 14;		//	Byte
	int32	vector[1]	= 15;		//	Byte
	int32	vector[2]	= 16;		//	Byte
	int32	vector[3]	= 17;		//	Byte
	int32	vector[4]	= 18;		//	Byte
	int32	vector[5]	= 19;		//	Byte
	int32	vector[6]	= 20;		//	Byte
	int32	vector[7]	= 21;		//	Byte
	int32	vector[8]	= 22;		//	Byte
	int32	vector[9]	= 23;		//	Byte
	int32	vector[10]	= 24;		//	Byte
	int32	vector[0xb]	= 25;		//	Byte
}

message tabledbg_quick_startFLO { repeated dbg_quick_startFLO tableDbgQuickStart = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen dbg_quick_start_Manager_472.proto


			   case "dbg_quick_start.bytes":
					ii = 0;
					tabledbg_quick_start tblManager472 = new tabledbg_quick_start { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager472.TableDbgQuickStart.Add(new dbg_quick_startFLO
								{
									DbgQuickStartId = br.ReadUInt32(),
									UnqId = br.ReadUInt32(),
									Name = br.ReadString(),
									Folder = br.ReadString(),
									LifeId = br.ReadUInt32(),
									Bitfield0 = br.ReadUInt16(),
									Guildhouse = br.ReadUInt16(),
									Rich = br.ReadInt16(),
									Number = br.ReadInt16(),
									AddRangeStr = br.ReadString(),
									AddIdStr = br.ReadString(),
									IsTrial = br.ReadByte(),
									BootSceneName = br.ReadString(),
									Vector[0] = br.ReadByte(),
									Vector[1] = br.ReadByte(),
									Vector[2] = br.ReadByte(),
									Vector[3] = br.ReadByte(),
									Vector[4] = br.ReadByte(),
									Vector[5] = br.ReadByte(),
									Vector[6] = br.ReadByte(),
									Vector[7] = br.ReadByte(),
									Vector[8] = br.ReadByte(),
									Vector[9] = br.ReadByte(),
									Vector[10] = br.ReadByte(),
									Vector[0xb] = br.ReadByte()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager472, Formatting.Indented)); }
					return tblManager472;
*/