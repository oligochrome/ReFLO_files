syntax = "proto3";

package ReFLO;

//  Manager_179
message purposeFLO {
	uint32	purpose_id	= 1;
	uint32	id	= 2;
	uint32	flagId	= 3;
	uint32	mainText	= 4;
	uint32	helpText	= 5;
	uint32	iconResId	= 6;
	uint32	groupId	= 7;
	int32	sortNum	= 8;
	uint32	guideTextId	= 9;
	uint32	guideActId	= 10;
	uint32	helpGuideActId	= 11;
	int32	priorityNum	= 12;
}

message tablepurposeFLO { repeated purposeFLO tablePurpose = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen purpose_Manager_179.proto


			   case "purpose.bytes":
					ii = 0;
					tablepurpose tblManager179 = new tablepurpose { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager179.TablePurpose.Add(new purposeFLO
								{
									PurposeId = br.ReadUInt32(),
									Id = br.ReadUInt32(),
									FlagId = br.ReadUInt32(),
									MainText = br.ReadUInt32(),
									HelpText = br.ReadUInt32(),
									IconResId = br.ReadUInt32(),
									GroupId = br.ReadUInt32(),
									SortNum = br.ReadInt32(),
									GuideTextId = br.ReadUInt32(),
									GuideActId = br.ReadUInt32(),
									HelpGuideActId = br.ReadUInt32(),
									PriorityNum = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager179, Formatting.Indented)); }
					return tblManager179;
*/