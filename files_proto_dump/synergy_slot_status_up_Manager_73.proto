syntax = "proto3";

package ReFLO;

//  Manager_73
message synergy_slot_status_upFLO {
	uint32	synergy_slot_status_up_id	= 1;
	uint32	ID	= 2;
	uint32	statusId	= 3;
	int32	minimumIncreaseValue	= 4;
	float	lv80MagnificationChar	= 5;		//	Single
	float	lv20MagnificationEquip	= 6;		//	Single
	float	ev20Magnification	= 7;		//	Single
	float	awakeing4Magnification	= 8;		//	Single
	float	riseRateAvatar	= 9;		//	Single
	float	riseRateChar	= 10;		//	Single
}

message tablesynergy_slot_status_upFLO { repeated synergy_slot_status_upFLO tableSynergySlotStatusUp = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen synergy_slot_status_up_Manager_73.proto


			   case "synergy_slot_status_up.bytes":
					ii = 0;
					tablesynergy_slot_status_up tblManager73 = new tablesynergy_slot_status_up { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager73.TableSynergySlotStatusUp.Add(new synergy_slot_status_upFLO
								{
									SynergySlotStatusUpId = br.ReadUInt32(),
									ID = br.ReadUInt32(),
									StatusId = br.ReadUInt32(),
									MinimumIncreaseValue = br.ReadInt32(),
									Lv80MagnificationChar = br.ReadSingle(),
									Lv20MagnificationEquip = br.ReadSingle(),
									Ev20Magnification = br.ReadSingle(),
									Awakeing4Magnification = br.ReadSingle(),
									RiseRateAvatar = br.ReadSingle(),
									RiseRateChar = br.ReadSingle()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager73, Formatting.Indented)); }
					return tblManager73;
*/