syntax = "proto3";

package ReFLO;

//  Manager_270
message lvup_equip_recipeFLO {
	uint32	lvup_equip_recipe_id	= 1;
	uint32	uqid	= 2;
	uint32	lifeid	= 3;
	uint32	vector[0]	= 4;
	uint32	vector[1]	= 5;
	uint32	vector[2]	= 6;
	uint32	vector[3]	= 7;
	uint32	vector[4]	= 8;
	uint32	vector[5]	= 9;
	uint32	vector[6]	= 10;
	uint32	vector[7]	= 11;
	uint32	vector[8]	= 12;
	uint32	vector[9]	= 13;
	uint32	vector[10]	= 14;
	uint32	vector[0xb]	= 15;
	int32	vector[0]	= 16;
	int32	vector[1]	= 17;
	int32	vector[2]	= 18;
	int32	vector[3]	= 19;
	int32	vector[4]	= 20;
	int32	vector[5]	= 21;
	int32	vector[6]	= 22;
	int32	vector[7]	= 23;
	int32	vector[8]	= 24;
	int32	vector[9]	= 25;
	int32	vector[10]	= 26;
	int32	vector[0xb]	= 27;
	int32	useRich	= 28;
	uint32	materialType	= 29;
}

message tablelvup_equip_recipeFLO { repeated lvup_equip_recipeFLO tableLvupEquipRecipe = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen lvup_equip_recipe_Manager_270.proto


			   case "lvup_equip_recipe.bytes":
					ii = 0;
					tablelvup_equip_recipe tblManager270 = new tablelvup_equip_recipe { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager270.TableLvupEquipRecipe.Add(new lvup_equip_recipeFLO
								{
									LvupEquipRecipeId = br.ReadUInt32(),
									Uqid = br.ReadUInt32(),
									Lifeid = br.ReadUInt32(),
									Vector[0] = br.ReadInt32(),
									Vector[1] = br.ReadInt32(),
									Vector[2] = br.ReadInt32(),
									Vector[3] = br.ReadInt32(),
									Vector[4] = br.ReadInt32(),
									Vector[5] = br.ReadInt32(),
									Vector[6] = br.ReadInt32(),
									Vector[7] = br.ReadInt32(),
									Vector[8] = br.ReadInt32(),
									Vector[9] = br.ReadInt32(),
									Vector[10] = br.ReadInt32(),
									Vector[0xb] = br.ReadInt32(),
									UseRich = br.ReadInt32(),
									MaterialType = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager270, Formatting.Indented)); }
					return tblManager270;
*/