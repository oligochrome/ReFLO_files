syntax = "proto3";

package ReFLO;

//  Manager_76
message synergy_slot_conditionFLO {
	uint32	synergy_slot_condition_id	= 1;
	uint32	ID	= 2;
	uint32	conditionTypeId	= 3;
	uint32	value_id	= 4;
	int32	value_num	= 5;
	uint32	text_introid	= 6;
}

message tablesynergy_slot_conditionFLO { repeated synergy_slot_conditionFLO tableSynergySlotCondition = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen synergy_slot_condition_Manager_76.proto


			   case "synergy_slot_condition.bytes":
					ii = 0;
					tablesynergy_slot_condition tblManager76 = new tablesynergy_slot_condition { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager76.TableSynergySlotCondition.Add(new synergy_slot_conditionFLO
								{
									SynergySlotConditionId = br.ReadUInt32(),
									ID = br.ReadUInt32(),
									ConditionTypeId = br.ReadUInt32(),
									ValueId = br.ReadUInt32(),
									ValueNum = br.ReadInt32(),
									TextIntroid = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager76, Formatting.Indented)); }
					return tblManager76;
*/