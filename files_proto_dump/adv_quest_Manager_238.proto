syntax = "proto3";

package ReFLO;

//  Manager_238
message adv_questFLO {
	uint32	adv_quest_id	= 1;
	uint32	dataBoostId	= 2;
	uint32	rareBigItemObjId	= 3;
	uint32	superRareBigItemObjId	= 4;
	int32	defaultRareBIAcquisitionProbability	= 5;
	int32	defaultSuperRareBIChangeRate	= 6;
	int32	feverRareBIAcquisitionProbabilityUpValue	= 7;
	int32	feverSuperRareBIChangeRateUpValue	= 8;
	int32	rareBIAcquisitionProbabilityUpValueBPSuper	= 9;
	int32	superRareBIChangeRateUpValueBPSuper	= 10;
	int32	rareBIAcquisitionProbabilityUpValueBPVery	= 11;
	int32	superRareBIChangeRateUpValueBPVery	= 12;
}

message tableadv_questFLO { repeated adv_questFLO tableAdvQuest = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen adv_quest_Manager_238.proto


			   case "adv_quest.bytes":
					ii = 0;
					tableadv_quest tblManager238 = new tableadv_quest { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager238.TableAdvQuest.Add(new adv_questFLO
								{
									AdvQuestId = br.ReadUInt32(),
									DataBoostId = br.ReadUInt32(),
									RareBigItemObjId = br.ReadUInt32(),
									SuperRareBigItemObjId = br.ReadUInt32(),
									DefaultRareBIAcquisitionProbability = br.ReadInt32(),
									DefaultSuperRareBIChangeRate = br.ReadInt32(),
									FeverRareBIAcquisitionProbabilityUpValue = br.ReadInt32(),
									FeverSuperRareBIChangeRateUpValue = br.ReadInt32(),
									RareBIAcquisitionProbabilityUpValueBPSuper = br.ReadInt32(),
									SuperRareBIChangeRateUpValueBPSuper = br.ReadInt32(),
									RareBIAcquisitionProbabilityUpValueBPVery = br.ReadInt32(),
									SuperRareBIChangeRateUpValueBPVery = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager238, Formatting.Indented)); }
					return tblManager238;
*/