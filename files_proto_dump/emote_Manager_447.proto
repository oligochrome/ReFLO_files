syntax = "proto3";

package ReFLO;

//  Manager_447
message emoteFLO {
	uint32	emote_id	= 1;
	uint32	emoteid	= 2;
	uint32	textid	= 3;
	uint32	actionid	= 4;
	uint32	emotetype	= 5;
	int32	loop	= 6;		//	Byte
}

message tableemoteFLO { repeated emoteFLO tableEmote = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen emote_Manager_447.proto


			   case "emote.bytes":
					ii = 0;
					tableemote tblManager447 = new tableemote { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager447.TableEmote.Add(new emoteFLO
								{
									EmoteId = br.ReadUInt32(),
									Emoteid = br.ReadUInt32(),
									Textid = br.ReadUInt32(),
									Actionid = br.ReadUInt32(),
									Emotetype = br.ReadUInt32(),
									Loop = br.ReadByte()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager447, Formatting.Indented)); }
					return tblManager447;
*/