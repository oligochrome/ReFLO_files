syntax = "proto3";

package ReFLO;

//  Manager_290
message life_altarFLO {
	uint32	life_altar_id	= 1;
	uint32	missionId	= 2;
	string	missionName	= 3;
	uint32	missionTextId	= 4;
	uint32	rewardItemId	= 5;
	int32	rewardStack	= 6;
	uint32	clientCharaId	= 7;
	float	clientOffsetX	= 8;		//	Single
	float	clientOffsetY	= 9;		//	Single
	float	clientOffsetSize	= 10;		//	Single
	uint32	clientMessageId	= 11;
	uint32	clientActionId	= 12;
	uint32	clientFaceId	= 13;
	int32	effectId	= 14;
	uint32	lifeAltarSequenceId	= 15;
}

message tablelife_altarFLO { repeated life_altarFLO tableLifeAltar = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen life_altar_Manager_290.proto


			   case "life_altar.bytes":
					ii = 0;
					tablelife_altar tblManager290 = new tablelife_altar { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager290.TableLifeAltar.Add(new life_altarFLO
								{
									LifeAltarId = br.ReadUInt32(),
									MissionId = br.ReadUInt32(),
									MissionName = br.ReadString(),
									MissionTextId = br.ReadUInt32(),
									RewardItemId = br.ReadUInt32(),
									RewardStack = br.ReadInt32(),
									ClientCharaId = br.ReadUInt32(),
									ClientOffsetX = br.ReadSingle(),
									ClientOffsetY = br.ReadSingle(),
									ClientOffsetSize = br.ReadSingle(),
									ClientMessageId = br.ReadUInt32(),
									ClientActionId = br.ReadUInt32(),
									ClientFaceId = br.ReadUInt32(),
									EffectId = br.ReadInt32(),
									LifeAltarSequenceId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager290, Formatting.Indented)); }
					return tblManager290;
*/