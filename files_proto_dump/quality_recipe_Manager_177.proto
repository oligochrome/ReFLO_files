syntax = "proto3";

package ReFLO;

//  Manager_177
message quality_recipeFLO {
	uint32	quality_recipe_id	= 1;
	uint32	objId	= 2;
	uint32	needMaterial	= 3;
	int32	needRich	= 4;
	uint32	rankId	= 5;
	uint32	recipeId	= 6;
	uint32	godRecipeId	= 7;
	int32	qupHp	= 8;
	int32	qupTime	= 9;
}

message tablequality_recipeFLO { repeated quality_recipeFLO tableQualityRecipe = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen quality_recipe_Manager_177.proto


			   case "quality_recipe.bytes":
					ii = 0;
					tablequality_recipe tblManager177 = new tablequality_recipe { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager177.TableQualityRecipe.Add(new quality_recipeFLO
								{
									QualityRecipeId = br.ReadUInt32(),
									ObjId = br.ReadUInt32(),
									NeedMaterial = br.ReadUInt32(),
									NeedRich = br.ReadInt32(),
									RankId = br.ReadUInt32(),
									RecipeId = br.ReadUInt32(),
									GodRecipeId = br.ReadUInt32(),
									QupHp = br.ReadInt32(),
									QupTime = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager177, Formatting.Indented)); }
					return tblManager177;
*/