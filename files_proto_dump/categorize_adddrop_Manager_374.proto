syntax = "proto3";

package ReFLO;

//  Manager_374
message categorize_adddropFLO {
	uint32	categorize_adddrop_id	= 1;
	uint32	uniqid	= 2;
	int32	target_broard_categorize_type	= 3;
	uint32	target_categorize_type_id	= 4;
	sint32	target_field_solo	= 5;		//	SByte
	sint32	target_field_multi	= 6;		//	SByte
	sint32	target_bounty_solo	= 7;		//	SByte
	sint32	target_bounty_multi	= 8;		//	SByte
	uint64	startDate	= 9;		//	UInt64
	uint64	endDate	= 10;		//	UInt64
	int32	priority	= 11;
	uint32	termsAdvQuestGroupId	= 12;
	uint32	termsAdvMapId	= 13;
	int32	item_drop_add	= 14;
	float	vector[0]	= 15;		//	Single
	float	vector[1]	= 16;		//	Single
	float	vector[2]	= 17;		//	Single
	int32	vector[0]	= 18;
	int32	vector[1]	= 19;
	int32	vector[2]	= 20;
	uint32	vector[0]	= 21;
	uint32	vector[1]	= 22;
	uint32	vector[2]	= 23;
}

message tablecategorize_adddropFLO { repeated categorize_adddropFLO tableCategorizeAdddrop = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen categorize_adddrop_Manager_374.proto


			   case "categorize_adddrop.bytes":
					ii = 0;
					tablecategorize_adddrop tblManager374 = new tablecategorize_adddrop { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager374.TableCategorizeAdddrop.Add(new categorize_adddropFLO
								{
									CategorizeAdddropId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									TargetBroardCategorizeType = br.ReadInt32(),
									TargetCategorizeTypeId = br.ReadUInt32(),
									TargetFieldSolo = br.ReadSByte(),
									TargetFieldMulti = br.ReadSByte(),
									TargetBountySolo = br.ReadSByte(),
									TargetBountyMulti = br.ReadSByte(),
									StartDate = br.ReadUInt64(),
									EndDate = br.ReadUInt64(),
									Priority = br.ReadInt32(),
									TermsAdvQuestGroupId = br.ReadUInt32(),
									TermsAdvMapId = br.ReadUInt32(),
									ItemDropAdd = br.ReadInt32(),
									Vector[0] = br.ReadUInt32(),
									Vector[1] = br.ReadUInt32(),
									Vector[2] = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager374, Formatting.Indented)); }
					return tblManager374;
*/