syntax = "proto3";

package ReFLO;

//  Manager_408
message expert_missionFLO {
	uint32	expert_mission_id	= 1;
	uint32	uniqid	= 2;
	uint32	titleTextId	= 3;
	uint32	descriptTextId	= 4;
	int32	lifeCount	= 5;
	int32	lv	= 6;
	uint32	licenseRank	= 7;
	uint32	plateResId	= 8;
	uint32	rewardTitle	= 9;
	uint32	rewardObj1	= 10;
	int32	rewardCount1	= 11;
	uint32	rewardObj2	= 12;
	int32	rewardCount2	= 13;
	uint32	rewardObj3	= 14;
	int32	rewardCount3	= 15;
	uint32	rewardObj4	= 16;
	int32	rewardCount4	= 17;
	uint32	rewardObj5	= 18;
	int32	rewardCount5	= 19;
	uint32	unlockObjId	= 20;
	uint32	completeObjId	= 21;
	uint32	unlockTextId	= 22;
	uint32	clearTextId	= 23;
	uint32	completeTextId	= 24;
}

message tableexpert_missionFLO { repeated expert_missionFLO tableExpertMission = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen expert_mission_Manager_408.proto


			   case "expert_mission.bytes":
					ii = 0;
					tableexpert_mission tblManager408 = new tableexpert_mission { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager408.TableExpertMission.Add(new expert_missionFLO
								{
									ExpertMissionId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									TitleTextId = br.ReadUInt32(),
									DescriptTextId = br.ReadUInt32(),
									LifeCount = br.ReadInt32(),
									Lv = br.ReadInt32(),
									LicenseRank = br.ReadUInt32(),
									PlateResId = br.ReadUInt32(),
									RewardTitle = br.ReadUInt32(),
									RewardObj1 = br.ReadUInt32(),
									RewardCount1 = br.ReadInt32(),
									RewardObj2 = br.ReadUInt32(),
									RewardCount2 = br.ReadInt32(),
									RewardObj3 = br.ReadUInt32(),
									RewardCount3 = br.ReadInt32(),
									RewardObj4 = br.ReadUInt32(),
									RewardCount4 = br.ReadInt32(),
									RewardObj5 = br.ReadUInt32(),
									RewardCount5 = br.ReadInt32(),
									UnlockObjId = br.ReadUInt32(),
									CompleteObjId = br.ReadUInt32(),
									UnlockTextId = br.ReadUInt32(),
									ClearTextId = br.ReadUInt32(),
									CompleteTextId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager408, Formatting.Indented)); }
					return tblManager408;
*/