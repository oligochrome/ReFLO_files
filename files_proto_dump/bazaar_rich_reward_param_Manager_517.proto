syntax = "proto3";

package ReFLO;

//  Manager_517
message bazaar_rich_reward_paramFLO {
	uint32	bazaar_rich_reward_param_id	= 1;
	uint32	rewardId	= 2;
	uint32	slotIndex	= 3;
	uint32	condType	= 4;
	uint32	condRich	= 5;
	uint32	rewardTextId	= 6;
	uint32	rewardItemId1	= 7;
	uint32	rewardItemId2	= 8;
	uint32	rewardItemId3	= 9;
	uint32	vector[0]	= 10;
	uint32	vector[1]	= 11;
	uint32	vector[2]	= 12;
}

message tablebazaar_rich_reward_paramFLO { repeated bazaar_rich_reward_paramFLO tableBazaarRichRewardParam = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen bazaar_rich_reward_param_Manager_517.proto


			   case "bazaar_rich_reward_param.bytes":
					ii = 0;
					tablebazaar_rich_reward_param tblManager517 = new tablebazaar_rich_reward_param { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager517.TableBazaarRichRewardParam.Add(new bazaar_rich_reward_paramFLO
								{
									BazaarRichRewardParamId = br.ReadUInt32(),
									RewardId = br.ReadUInt32(),
									SlotIndex = br.ReadUInt32(),
									CondType = br.ReadUInt32(),
									CondRich = br.ReadUInt32(),
									RewardTextId = br.ReadUInt32(),
									RewardItemId1 = br.ReadUInt32(),
									RewardItemId2 = br.ReadUInt32(),
									RewardItemId3 = br.ReadUInt32(),
									Vector[0] = br.ReadUInt32(),
									Vector[1] = br.ReadUInt32(),
									Vector[2] = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager517, Formatting.Indented)); }
					return tblManager517;
*/