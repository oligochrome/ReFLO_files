syntax = "proto3";

package ReFLO;

//  Manager_102
message smile_typeFLO {
	uint32	smile_type_id	= 1;
	uint32	smiletypeId	= 2;
	int32	sex	= 3;		//	Byte
	uint32	resId	= 4;
	int32	sortNo	= 5;		//	Byte
}

message tablesmile_typeFLO { repeated smile_typeFLO tableSmileType = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen smile_type_Manager_102.proto


			   case "smile_type.bytes":
					ii = 0;
					tablesmile_type tblManager102 = new tablesmile_type { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager102.TableSmileType.Add(new smile_typeFLO
								{
									SmileTypeId = br.ReadUInt32(),
									SmiletypeId = br.ReadUInt32(),
									Sex = br.ReadByte(),
									ResId = br.ReadUInt32(),
									SortNo = br.ReadByte()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager102, Formatting.Indented)); }
					return tblManager102;
*/