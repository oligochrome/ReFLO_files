syntax = "proto3";

package ReFLO;

//  Manager_85
message star_themeFLO {
	uint32	star_theme_id	= 1;
	uint32	uniqid	= 2;
	int32	rewardStar	= 3;
	uint32	title	= 4;
	uint32	summary	= 5;
	uint32	hint	= 6;
	uint32	speech	= 7;
	uint32	vector[0]	= 8;
	uint32	vector[1]	= 9;
	uint32	vector[2]	= 10;
	int32	vector[0]	= 11;
	int32	vector[1]	= 12;
	int32	vector[2]	= 13;
	uint32	targetType	= 14;
	uint32	guideTargetType	= 15;
	uint32	targetObj	= 16;
	int32	targetNum	= 17;
	sint32	lifeLimited	= 18;		//	SByte
	float	modelScale	= 19;		//	Single
	float	modeloffsetY	= 20;		//	Single
	uint32	speechObjId	= 21;
	uint32	targetIcon	= 22;
	int32	difficulty	= 23;
	int32	silhouette	= 24;
}

message tablestar_themeFLO { repeated star_themeFLO tableStarTheme = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen star_theme_Manager_85.proto


			   case "star_theme.bytes":
					ii = 0;
					tablestar_theme tblManager85 = new tablestar_theme { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager85.TableStarTheme.Add(new star_themeFLO
								{
									StarThemeId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									RewardStar = br.ReadInt32(),
									Title = br.ReadUInt32(),
									Summary = br.ReadUInt32(),
									Hint = br.ReadUInt32(),
									Speech = br.ReadUInt32(),
									Vector[0] = br.ReadInt32(),
									Vector[1] = br.ReadInt32(),
									Vector[2] = br.ReadInt32(),
									TargetType = br.ReadUInt32(),
									GuideTargetType = br.ReadUInt32(),
									TargetObj = br.ReadUInt32(),
									TargetNum = br.ReadInt32(),
									LifeLimited = br.ReadSByte(),
									ModelScale = br.ReadSingle(),
									ModeloffsetY = br.ReadSingle(),
									SpeechObjId = br.ReadUInt32(),
									TargetIcon = br.ReadUInt32(),
									Difficulty = br.ReadInt32(),
									Silhouette = br.ReadInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager85, Formatting.Indented)); }
					return tblManager85;
*/