syntax = "proto3";

package ReFLO;

//  Manager_428
message event_management_mapFLO {
	uint32	event_management_map_id	= 1;
	uint32	eventId	= 2;
	uint64	startDate	= 3;		//	UInt64
	uint64	endDate	= 4;		//	UInt64
	uint32	openFlag	= 5;
	uint32	mainframeResId	= 6;
	uint32	singleQuestUIResId	= 7;
	uint32	multiQuestUIResId	= 8;
	int32	multiQuestUIResPriority	= 9;
	uint32	eventCharaObjId	= 10;
	uint32	eventBonusObjId	= 11;
	int32	eventBonusValue	= 12;
	uint32	playType	= 13;
	uint32	mapRuleTypeId	= 14;
}

message tableevent_management_mapFLO { repeated event_management_mapFLO tableEventManagementMap = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen event_management_map_Manager_428.proto


			   case "event_management_map.bytes":
					ii = 0;
					tableevent_management_map tblManager428 = new tableevent_management_map { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager428.TableEventManagementMap.Add(new event_management_mapFLO
								{
									EventManagementMapId = br.ReadUInt32(),
									EventId = br.ReadUInt32(),
									StartDate = br.ReadUInt64(),
									EndDate = br.ReadUInt64(),
									OpenFlag = br.ReadUInt32(),
									MainframeResId = br.ReadUInt32(),
									SingleQuestUIResId = br.ReadUInt32(),
									MultiQuestUIResId = br.ReadUInt32(),
									MultiQuestUIResPriority = br.ReadInt32(),
									EventCharaObjId = br.ReadUInt32(),
									EventBonusObjId = br.ReadUInt32(),
									EventBonusValue = br.ReadInt32(),
									PlayType = br.ReadUInt32(),
									MapRuleTypeId = br.ReadUInt32()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager428, Formatting.Indented)); }
					return tblManager428;
*/