syntax = "proto3";

package ReFLO;

//  Manager_149
message reward_list_guide_charaFLO {
	uint32	reward_list_guide_chara_id	= 1;
	uint32	uniqid	= 2;
	uint32	charaId	= 3;
	uint32	vector[0]	= 4;
	uint32	vector[1]	= 5;
	uint32	vector[2]	= 6;
	uint32	vector[0]	= 7;
	uint32	vector[1]	= 8;
	uint32	vector[2]	= 9;
	uint32	vector[0]	= 10;
	uint32	vector[1]	= 11;
	uint32	vector[2]	= 12;
	uint32	vector[0]	= 13;
	uint32	vector[1]	= 14;
	uint32	vector[2]	= 15;
	float	charaRotate	= 16;		//	Single
	float	charaScale	= 17;		//	Single
	float	charaOffsetY	= 18;		//	Single
}

message tablereward_list_guide_charaFLO { repeated reward_list_guide_charaFLO tableRewardListGuideChara = 1; }

/*
cd E:\OneDrive\FLO\ReFLO\ReFLO\Proto\Def; ..\..\..\packages\Google.Protobuf.Tools.3.19.4\tools\windows_x64\protoc --proto_path=. --csharp_out=..\Gen reward_list_guide_chara_Manager_149.proto


			   case "reward_list_guide_chara.bytes":
					ii = 0;
					tablereward_list_guide_chara tblManager149 = new tablereward_list_guide_chara { };
					using (MemoryStream sr = new MemoryStream(data))
					{
						using (BinaryReader br = new BinaryReader(sr, Encdg))
						{
							uint tableCount = br.ReadUInt32();
							if (DumpDEBUG) { Console.Error.WriteLine("Expected: {0}", tableCount); }
							while (br.BaseStream.Position != br.BaseStream.Length)
							{
								tblManager149.TableRewardListGuideChara.Add(new reward_list_guide_charaFLO
								{
									RewardListGuideCharaId = br.ReadUInt32(),
									Uniqid = br.ReadUInt32(),
									CharaId = br.ReadUInt32(),
									Vector[0] = br.ReadUInt32(),
									Vector[1] = br.ReadUInt32(),
									Vector[2] = br.ReadUInt32(),
									CharaRotate = br.ReadSingle(),
									CharaScale = br.ReadSingle(),
									CharaOffsetY = br.ReadSingle()
								});
								ii += 1;
							}
							if (DumpDEBUG) { Console.Error.WriteLine("Total = {0}", ii); }
							if (tableCount != ii) { Console.Error.WriteLine("ERROR: {0} ENTRY COUNTS DO NOT MATCH! {1} / {2}", baseName, ii, tableCount); }
						}
					}
					if (outputJSON) { File.WriteAllText(outFile, JsonConvert.SerializeObject(tblManager149, Formatting.Indented)); }
					return tblManager149;
*/